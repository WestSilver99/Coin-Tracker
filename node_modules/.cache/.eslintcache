[{"C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\index.tsx":"1","C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\theme.ts":"2","C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\App.tsx":"3","C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\routes\\Coin.tsx":"4","C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\routes\\Coins.tsx":"5","C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\Router.tsx":"6","C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\routes\\Chart.tsx":"7","C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\routes\\Price.tsx":"8","C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\api.ts":"9","C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\atom.ts":"10"},{"size":472,"mtime":1676453645408,"results":"11","hashOfConfig":"12"},{"size":297,"mtime":1676447602689,"results":"13","hashOfConfig":"12"},{"size":2227,"mtime":1676453849306,"results":"14","hashOfConfig":"12"},{"size":5665,"mtime":1676453608780,"results":"15","hashOfConfig":"12"},{"size":2413,"mtime":1676520618327,"results":"16","hashOfConfig":"12"},{"size":418,"mtime":1676453573111,"results":"17","hashOfConfig":"12"},{"size":1750,"mtime":1676453862185,"results":"18","hashOfConfig":"12"},{"size":74,"mtime":1676443983822,"results":"19","hashOfConfig":"12"},{"size":745,"mtime":1676445518336,"results":"20","hashOfConfig":"12"},{"size":110,"mtime":1676453707158,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"193fzl2",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"25"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\index.tsx",[],[],[],"C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\theme.ts",[],[],"C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\App.tsx",["56","57"],[],"import { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport Router from \"./Router\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport { useState } from \"react\";\r\nimport { atom, useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"./atom\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nfont-family: 'Source Sans Pro', sans-serif;\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n*{\r\n  box-sizing: border-box;\r\n}\r\nbody{\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n}\r\na{\r\n  text-decoration: none ;\r\n  color:inherit;\r\n}\r\n`;\r\n\r\nfunction App() {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\r\n        <GlobalStyle />\r\n        <Router />\r\n        <ReactQueryDevtools />{\" \"}\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\routes\\Coin.tsx",["58"],[],"import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  BrowserRouter,\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface RouteState {\r\n  name: string;\r\n}\r\nconst Containter = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.div`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: white;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  logo: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId)\r\n  );\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Containter>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Link to=\"/\">\r\n          <Title>\r\n            {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n          </Title>\r\n        </Link>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank: </span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol: </span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price: </span>\r\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>TOTAL SUPPLY: </span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>MAX SUPPLY: </span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/${coinId}/price`}>\r\n              <Price />\r\n            </Route>\r\n            <Route path={`/${coinId}/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Containter>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\routes\\Coins.tsx",[],[],"C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\Router.tsx",[],[],"C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\routes\\Chart.tsx",[],[],"C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\routes\\Price.tsx",[],[],"C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\api.ts",["59"],[],"const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `https://ohlcv-api.nomadcoders.workers.dev?coinId=${coinId}`\r\n  ).then((response) => response.json());\r\n}\r\n","C:\\Users\\seo60\\OneDrive\\바탕 화면\\react-masterclass\\src\\atom.ts",[],[],{"ruleId":"60","severity":1,"message":"61","line":5,"column":10,"nodeType":"62","messageId":"63","endLine":5,"endColumn":18},{"ruleId":"60","severity":1,"message":"64","line":6,"column":10,"nodeType":"62","messageId":"63","endLine":6,"endColumn":14},{"ruleId":"60","severity":1,"message":"65","line":4,"column":3,"nodeType":"62","messageId":"63","endLine":4,"endColumn":16},{"ruleId":"60","severity":1,"message":"66","line":20,"column":9,"nodeType":"62","messageId":"63","endLine":20,"endColumn":18},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'atom' is defined but never used.","'BrowserRouter' is defined but never used.","'startDate' is assigned a value but never used."]