{"ast":null,"code":"import{useQuery}from\"react-query\";import{fetchCoinHistory}from\"../api\";import ApexCharts from\"react-apexcharts\";import{jsx as _jsx}from\"react/jsx-runtime\";function Chart(_ref){var _data$map;var coinId=_ref.coinId;var _useQuery=useQuery([\"ohlcv\",coinId],function(){return fetchCoinHistory(coinId);}),isLoading=_useQuery.isLoading,data=_useQuery.data;return/*#__PURE__*/_jsx(\"div\",{children:isLoading?\"Loading chart...\":/*#__PURE__*/_jsx(ApexCharts,{type:\"line\",series:[{name:\"price\",data:(_data$map=data===null||data===void 0?void 0:data.map(function(price){return price.close;}))!==null&&_data$map!==void 0?_data$map:[]}],options:{theme:{mode:\"dark\"},chart:{type:\"candlestick\",height:350,width:500,toolbar:{show:false},background:\"transparent\"},grid:{show:false},stroke:{curve:\"smooth\",width:5},yaxis:{show:false},xaxis:{labels:{show:false,datetimeFormatter:{month:\"mmm 'yy\"}},axisTicks:{show:false},categories:data===null||data===void 0?void 0:data.map(function(price){return new Date(parseInt(price.time_close)*1000).toISOString();}),type:\"datetime\"},fill:{type:\"gradient\",gradient:{gradientToColors:[\"blue\"],stops:[0,100]}},colors:[\"red\"],tooltip:{y:{formatter:function formatter(value){return\"$ \".concat(value.toFixed(2));}}}}})});}export default Chart;","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexCharts","Chart","coinId","isLoading","data","name","map","price","close","theme","mode","chart","type","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","labels","datetimeFormatter","month","axisTicks","categories","Date","parseInt","time_close","toISOString","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed"],"sources":["C:/Users/seo60/OneDrive/바탕 화면/react-masterclass/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexCharts from \"react-apexcharts\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\r\n    fetchCoinHistory(coinId)\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexCharts\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"price\",\r\n              data: data?.map((price) => price.close) ?? [],\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: \"dark\",\r\n            },\r\n            chart: {\r\n              type: \"candlestick\",\r\n              height: 350,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: {\r\n              show: false,\r\n            },\r\n            stroke: {\r\n              curve: \"smooth\",\r\n              width: 5,\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              labels: {\r\n                show: false,\r\n                datetimeFormatter: { month: \"mmm 'yy\" },\r\n              },\r\n              axisTicks: {\r\n                show: false,\r\n              },\r\n              categories: data?.map((price) =>\r\n                new Date(parseInt(price.time_close) * 1000).toISOString()\r\n              ),\r\n              type: \"datetime\",\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: { gradientToColors: [\"blue\"], stops: [0, 100] },\r\n            },\r\n            colors: [\"red\"],\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$ ${value.toFixed(2)}`,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,aAAa,CAEtC,OAASC,gBAAgB,KAAQ,QAAQ,CACzC,MAAOC,WAAU,KAAM,kBAAkB,CAAC,2CAgB1C,QAASC,MAAK,MAAyB,kBAAtBC,OAAM,MAANA,MAAM,CACrB,cAA4BJ,QAAQ,CAAgB,CAAC,OAAO,CAAEI,MAAM,CAAC,CAAE,iBACrEH,iBAAgB,CAACG,MAAM,CAAC,GACzB,CAFOC,SAAS,WAATA,SAAS,CAAEC,IAAI,WAAJA,IAAI,CAGvB,mBACE,qBACGD,SAAS,CACR,kBAAkB,cAElB,KAAC,UAAU,EACT,IAAI,CAAC,MAAM,CACX,MAAM,CAAE,CACN,CACEE,IAAI,CAAE,OAAO,CACbD,IAAI,YAAEA,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEE,GAAG,CAAC,SAACC,KAAK,QAAKA,MAAK,CAACC,KAAK,GAAC,uCAAI,EAC7C,CAAC,CACD,CACF,OAAO,CAAE,CACPC,KAAK,CAAE,CACLC,IAAI,CAAE,MACR,CAAC,CACDC,KAAK,CAAE,CACLC,IAAI,CAAE,aAAa,CACnBC,MAAM,CAAE,GAAG,CACXC,KAAK,CAAE,GAAG,CACVC,OAAO,CAAE,CACPC,IAAI,CAAE,KACR,CAAC,CACDC,UAAU,CAAE,aACd,CAAC,CACDC,IAAI,CAAE,CACJF,IAAI,CAAE,KACR,CAAC,CACDG,MAAM,CAAE,CACNC,KAAK,CAAE,QAAQ,CACfN,KAAK,CAAE,CACT,CAAC,CACDO,KAAK,CAAE,CACLL,IAAI,CAAE,KACR,CAAC,CACDM,KAAK,CAAE,CACLC,MAAM,CAAE,CACNP,IAAI,CAAE,KAAK,CACXQ,iBAAiB,CAAE,CAAEC,KAAK,CAAE,SAAU,CACxC,CAAC,CACDC,SAAS,CAAE,CACTV,IAAI,CAAE,KACR,CAAC,CACDW,UAAU,CAAEvB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEE,GAAG,CAAC,SAACC,KAAK,QAC1B,IAAIqB,KAAI,CAACC,QAAQ,CAACtB,KAAK,CAACuB,UAAU,CAAC,CAAG,IAAI,CAAC,CAACC,WAAW,EAAE,GAC1D,CACDnB,IAAI,CAAE,UACR,CAAC,CACDoB,IAAI,CAAE,CACJpB,IAAI,CAAE,UAAU,CAChBqB,QAAQ,CAAE,CAAEC,gBAAgB,CAAE,CAAC,MAAM,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAC,CAAE,GAAG,CAAE,CAC1D,CAAC,CACDC,MAAM,CAAE,CAAC,KAAK,CAAC,CACfC,OAAO,CAAE,CACPC,CAAC,CAAE,CACDC,SAAS,CAAE,mBAACC,KAAK,oBAAUA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,GAC7C,CACF,CACF,CAAE,EAEL,EACG,CAEV,CAEA,cAAexC,MAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}