{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seo60\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react-masterclass\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const onChange = event => {\n    const {\n      currentTarget: {\n        value\n      }\n    } = event;\n    setValue(value);\n    // const value = event.currentTarget.value 랑 똑같습니다. 왜 저렇게 복잡하게 하냐고 물어보실수도 있는데 사실 저런식으로 한개만 만들때는 저 문법의 장점이 없어요.\n    // 헌데 만약에 currentTarget안에서 value, tagName, width, id 이 4개를 가져오고 싶다고 하면 기존 문법으로는 이렇게 써야 되겠죠?\n    // const value = event.currentTarget.value;\n    // const tagName = event.currentTarget.tagName;\n    // const width = event.currentTarget.width;\n    // const id = event.currentTarget.id;\n    // 이거를 이렇게 바꿔 쓰실수 있습니다.\n    // const {\n    // currentTarget: {value, tagName, width, id}\n    // } = event;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: value,\n        onChange: onChange,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","value","setValue","onChange","event","currentTarget"],"sources":["C:/Users/seo60/OneDrive/바탕 화면/react-masterclass/src/App.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { value },\n    } = event;\n    setValue(value);\n    // const value = event.currentTarget.value 랑 똑같습니다. 왜 저렇게 복잡하게 하냐고 물어보실수도 있는데 사실 저런식으로 한개만 만들때는 저 문법의 장점이 없어요.\n    // 헌데 만약에 currentTarget안에서 value, tagName, width, id 이 4개를 가져오고 싶다고 하면 기존 문법으로는 이렇게 써야 되겠죠?\n    // const value = event.currentTarget.value;\n    // const tagName = event.currentTarget.tagName;\n    // const width = event.currentTarget.width;\n    // const id = event.currentTarget.id;\n    // 이거를 이렇게 바꿔 쓰실수 있습니다.\n    // const {\n    // currentTarget: {value, tagName, width, id}\n    // } = event;\n  };\n  return (\n    <div>\n      <form>\n        <input value={value} onChange={onChange} type=\"text\" />\n        <button>Log in</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMI,QAAQ,GAAIC,KAAwC,IAAK;IAC7D,MAAM;MACJC,aAAa,EAAE;QAAEJ;MAAM;IACzB,CAAC,GAAGG,KAAK;IACTF,QAAQ,CAACD,KAAK,CAAC;IACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EACD,oBACE;IAAA,uBACE;MAAA,wBACE;QAAO,KAAK,EAAEA,KAAM;QAAC,QAAQ,EAAEE,QAAS;QAAC,IAAI,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACvD;QAAA,UAAQ;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAClB;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GA1BQH,GAAG;AAAA,KAAHA,GAAG;AA4BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}